{
  "name": "konfig",
  "description": "Config loader module. Automatic, environment specific and dynamic.",
  "keywords": [
    "config",
    "configuration",
    "environment",
    "utilities",
    "util"
  ],
  "author": {
    "name": "Ali Davut",
    "email": "adavut@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vngrs/konfig.git"
  },
  "version": "0.2.0",
  "main": "lib/index.js",
  "scripts": {
    "test": "mocha test/index.coffee"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "chai": "~1.8.1",
    "grunt": "~0.4.1",
    "grunt-contrib-coffee": "~0.7.0",
    "coffee-script": "~1.6.3",
    "matchdep": "~0.3.0"
  },
  "dependencies": {
    "js-yaml": "~3.0.1",
    "cson": "~1.6.0",
    "lazy.js": "~0.3.2"
  },
  "license": "LGPL-3.0",
  "readme": "KONFIG\n======\nKonfig is a **config loader** module which allows you to load **json**, **cson** and **yaml** files automatically **by environment** in node.js applications. You can also define **dynamic values** which can be used especially for dynamic environment variables on Heroku like services.\n\n## Installation\nFirst intall module from npm :\n```bash\n$ npm install konfig\n```\nCreate a folder named ```config``` under the root directory of the project. Then load Konfig in your application file :\n```javascript\nvar config = require('konfig')()\n\n// Don't forget parentheses to call the function\n```\n\nWe recommend you to define config variable as global :\n```javascript\nglobal.config = require('konfig')()\n```\n\nYou can also use different folder name except ```config``` by passing path variable while loading Konfig :\n```javascript\nglobal.config = require('konfig')({ path: './another_directory' })\n```\n\n## Usage\n\nLet's create an example config file under ```config``` folder named ```app.json``` or ```app.yml```\n\n```json\n{\n    \"default\": {\n        \"port\": 3000,\n        \"cache_assets\": true,\n        \"secret_key\": \"7EHDWHD9W9UW9FBFB949394BWYFG8WE78F\"\n    },\n\n    \"development\": {\n        \"cache_assets\": false\n    },\n\n    \"test\": {\n        \"port\": 3001\n    },\n\n    \"staging\": {\n        \"port\": #{process.env.PORT},\n        \"secret_key\": \"3F8RRJR30UHERGUH8UERHGIUERHG3987GH8\"\n    },\n\n    \"production\": {\n        \"port\": #{process.env.PORT},\n        \"secret_key\": \"3F8RRJR30UHERGUH8UERHGIUERHG3987GH8\"\n    }\n}\n```\n\nIf you use yaml format the config file will be like this :\n\n```yaml\ndefault:\n    port: 3000\n    cache_assets: true\n    secret_key: 7EHDWHD9W9UW9FBFB949394BWYFG8WE78F\n\ndevelopment:\n    cache_assets: false\n\ntest:\n    port: 3001\n\nstaging:\n    <<: *production\n\nproduction: &production\n    port: #{process.env.PORT}\n    secret_key: 3F8RRJR30UHERGUH8UERHGIUERHG3987GH8\n\n```\n\nAfter creating config files, let's try it by using node interpreter. But first ensure that the module is installed ```npm install konfig``` and open node interpreter in the root directory of the project :\n\n```bash\n$ node\n```\nThen load the module\n```javascript\n> var config = require('konfig')()\n```\nLet's try to get port and secret key values, remember that the **default environment** will be **development** and the config object structure will be ```config.[filename].[config_key]...```\n```javascript\n> config.app.port\n3000\n> config.app.secret_key\n'7EHDWHD9W9UW9FBFB949394BWYFG8WE78F'\n```\nQuit interpreter, and let's open the interpreter with ```staging``` environment with port 4567. If you look at the config file you will see the staging port is **dynamic value**. Konfig enables you to use node variables in your config file by using **#{}** signs.\n```bash\n$ NODE_ENV=staging PORT=4567 node\n> var config = require('konfig')()\n```\nNow, we will get some config values:\n```javascript\n> config.app.port\n4567\n> config.app.secret_key\n'3F8RRJR30UHERGUH8UERHGIUERHG3987GH8'\n```\n\nNotice that **default values** copies itself to the config if there is no key in the environment config with the same name.\n\n## License\nKonfig is released under GNU Lesser General Public License v3 (or higher) published by Free Software Foundation. See http://www.gnu.org/licenses/lgpl-3.0.html for more details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vngrs/konfig/issues"
  },
  "homepage": "https://github.com/vngrs/konfig",
  "_id": "konfig@0.2.0",
  "_shasum": "7b27eb14fb6d68a4cc430b04951bbcc7692837c2",
  "_from": "konfig@",
  "_resolved": "https://registry.npmjs.org/konfig/-/konfig-0.2.0.tgz"
}
